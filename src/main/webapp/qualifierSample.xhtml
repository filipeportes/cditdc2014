<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns:ui="http://java.sun.com/jsf/facelets"
                template="./template/template.xhtml"
                xmlns:p="http://primefaces.org/ui"
                xmlns:h="http://xmlns.jcp.org/jsf/html">

    <ui:define name="content">
        <h2>CDI Qualifiers</h2>
        <br/>
        <p>
            Agora as duas implementações de Greeting podem ser Injetadas.<br/>
            Beans que não recebam nenhuma anotação de Qualifier, automaticamente são definidos como @Default.
            A classe Greeting poderia ser definida dessa forma:

            <pre class="brush: java">
                @Default
                public class Greeting {
                    public String greet(String name) {
                        return "Ola, caro " + name + ".";
                    }
                }
            </pre>

            Para utilizarmos nossa nova Classe vamos injeta-la dessa forma:
            <pre class="brush: java">
                @Named
                @ViewScoped
                public class qualifierBean {

                    @Inject @Informal private Greeting greeting;
                    ...
                }
            </pre>
        </p>
        <center>
            <h:form>
                <p:outputLabel value="Eu sou: " for="name" />
                <p:inputText id="name" value="#{qualifierBean.name}" size="30" />
                <p:commandButton value="Ola demo CDI!" action="#{qualifierBean.sayHello()}" update="greet" />
                <br/>
                <p:outputLabel id="greet" style="font-weight: bold;" value="#{qualifierBean.greet}"/>
            </h:form>
        </center>
    </ui:define>

</ui:composition>
